{"version":3,"sources":["UniversalButton.tsx","Counter.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["buttonStyle","width","UniversalButton","props","style","disabled","onClick","universalFunction","title","inputStyle","padding","textAlign","containerStyle","display","Counter","value","App","useState","setValue","className","counterPlus","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gOASaA,EAAc,CACvBC,MAAO,OAGEC,EAAkB,SAACC,GAC5B,OACI,wBAAQC,MAAOJ,EAAaK,SAAUF,EAAME,SAAUC,QAAS,WAAOH,EAAMI,qBAA5E,SAAmGJ,EAAMK,SCN3GC,EAAa,CACfC,QAAS,OACTC,UAAW,UAETC,EAAiB,CACnBC,QAAS,gBAEAC,EAAU,SAACX,GACpB,OAAO,sBAAKC,MAAOQ,EAAZ,UACH,8BACI,uBAAOR,MAAOK,EAAYM,MAAOZ,EAAMY,UAE3C,gCAGI,cAAC,EAAD,CACIA,MAAOZ,EAAMY,MACbP,MAAO,MACPH,SAA0B,IAAhBF,EAAMY,MAChBR,kBAAmBJ,EAAMI,oBAE7B,cAAC,EAAD,CACIQ,MAAOZ,EAAMY,MACbP,MAAO,QACPH,SAAUF,EAAMY,MAAQ,EACxBR,kBAAmBJ,EAAMI,2BCD1BS,MA5Bf,WAAgB,IAAD,EACaC,mBAAiB,GAD9B,mBACNF,EADM,KACCG,EADD,KAgBb,OACI,qBAAKC,UAAU,MAAf,SACE,cAAC,EAAD,CACIJ,MAAOA,EACPK,YAlBU,WACfL,EAAQ,GACTG,EAASH,EAAM,IAiBTG,SAAUA,EACVX,kBAdgB,WAEtBW,EADCH,EAAQ,EACAA,EAAM,EAEN,SCHAM,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.3eee6367.chunk.js","sourcesContent":["import React from 'react';\r\n\r\ntype PropsType = {\r\n    value:number\r\n    title:string\r\n    disabled:boolean\r\n    universalFunction:() => void\r\n\r\n}\r\nexport const buttonStyle = {\r\n    width: '50%'\r\n}\r\n\r\nexport const UniversalButton = (props:PropsType) => {\r\n    return (\r\n        <button style={buttonStyle} disabled={props.disabled} onClick={() => {props.universalFunction()}}>{props.title}</button>\r\n    )\r\n}","import React from 'react';\r\nimport {UniversalButton} from \"./UniversalButton\";\r\n\r\ntype PropsType = {\r\n    value: number\r\n    counterPlus: () => void\r\n    setValue:(value:number) => void\r\n    universalFunction:() => void\r\n}\r\nconst inputStyle = {\r\n    padding: '20px',\r\n    textAlign: 'center' as 'center'\r\n}\r\nconst containerStyle = {\r\n    display: 'inline-block'\r\n}\r\nexport const Counter = (props:PropsType) => {\r\n    return <div style={containerStyle}>\r\n        <div>\r\n            <input style={inputStyle} value={props.value}/>\r\n        </div>\r\n        <div>\r\n            {/*<button disabled={props.value === 5} onClick={() => {props.counterPlus()}}>inc</button>*/}\r\n            {/*<button disabled={props.value < 5} onClick={() => {props.setValue(0)}}>reset</button>*/}\r\n            <UniversalButton\r\n                value={props.value}\r\n                title={'inc'}\r\n                disabled={props.value === 5}\r\n                universalFunction={props.universalFunction}\r\n            />\r\n            <UniversalButton\r\n                value={props.value}\r\n                title={'reset'}\r\n                disabled={props.value < 5}\r\n                universalFunction={props.universalFunction}\r\n            />\r\n        </div>\r\n\r\n    </div>\r\n\r\n}","import React, {useState} from 'react';\nimport './App.css';\nimport {Counter} from \"./Counter\";\n\n\nfunction App() {\n  const [value, setValue] = useState<number>(0)\n  const counterPlus = () => {\n    if(value < 5){\n      setValue(value+1)\n    }\n  }\n\n  const universalFunction = () => {\n    if(value < 5){\n      setValue(value+1)\n    }else {\n      setValue(0)\n    }\n  }\n\n  return (\n      <div className=\"App\">\n        <Counter\n            value={value}\n            counterPlus={counterPlus}\n            setValue={setValue}\n            universalFunction={universalFunction}\n        />\n      </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}